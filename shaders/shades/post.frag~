#version 330 core
out vec4 FragColor;

in vec2 TexCoords;
uniform sampler2D screenTexture;
uniform sampler2D depthTex;

uniform mat4 projection;
uniform mat4 view;

uniform mat4 pastProject;
uniform mat4 pastView;

void main() {
  //FragColor = texture(screenTexture, TexCoords);
  mat4 viewPro = projection * view;
  mat4 inverseVP = inverse(viewPro);

  mat4 pastVP = pastProject * pastView;

  vec4 depth = (texture(depthTex, TexCoords));
  float zOverW = depth.z/depth.w;
  vec4 H = vec4(TexCoords.x * 2 - 1, (1 - TexCoords.y) * 2 - 1,
      zOverW, 1);

  //vec4 D = mul(H, inverseVP);
  vec4 D = H * inverseVP;
  vec4 worldPos = D / D.w;
  
  vec4 currentPos = H;

  //vec4 previousPos = mul(worldPos, pastVP);
  vec4 previousPos = worldPos * pastVP;
  previousPos /= previousPos.w;

  vec2 velocity = vec2((currentPos - previousPos) / 2.0f);

  vec4 color = texture(screenTexture, TexCoords);
  vec2 coords = TexCoords;
  coords += velocity;
  for (int i = 0; i < 10; i++, coords += velocity) {
    vec4 currentColor = texture(screenTexture, coords);
    color += currentColor;
  }
  FragColor = color / 10;
}
